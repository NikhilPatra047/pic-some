{"version":3,"sources":["Context.js","components/Header.js","hooks/useHover.js","components/CartItem.js","pages/Cart.js","components/Image.js","utils/index.js","pages/Photos.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","ContextProvider","children","useState","allPhotos","setAllPhotos","cartItems","setCartItems","useEffect","fetch","then","res","json","data","Provider","value","toggleFavorite","id","updatedArr","map","photo","isFavorite","addToCart","newItem","prevItems","removeFromCart","filter","item","emptyCart","Header","cartClassName","useContext","length","to","className","useHover","hovered","setHovered","ref","useRef","enter","leave","current","addEventListener","removeEventListener","CartItem","iconClassName","onClick","src","url","width","Cart","buttonText","setButtonText","totalCostDisplay","toLocaleString","style","currency","cartItemElements","setTimeout","console","log","Image","img","some","getClass","i","Photos","imageElements","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aa16e66b.chunk.js","sourcesContent":["import React, {useState, useEffect} from \"react\"\n\nconst Context = React.createContext()\n\nfunction ContextProvider({children}) {\n    const [allPhotos, setAllPhotos] = useState([])\n    const [cartItems, setCartItems] = useState([])\n    \n    const url = \"https://raw.githubusercontent.com/bobziroll/scrimba-react-bootcamp-images/master/images.json\"\n    useEffect(() => {\n        fetch(url)\n            .then(res => res.json())\n            .then(data => setAllPhotos(data))\n    }, [])\n    \n    function toggleFavorite(id) {\n        const updatedArr = allPhotos.map(photo => {\n            if(photo.id === id) {\n                return {...photo, isFavorite: !photo.isFavorite}\n            }\n            return photo\n        })\n        \n        setAllPhotos(updatedArr)\n    }\n    \n    function addToCart(newItem) {\n        setCartItems(prevItems => [...prevItems, newItem])\n    }\n    \n    function removeFromCart(id) {\n        setCartItems(prevItems => prevItems.filter(item => item.id !== id))\n    }\n    \n    function emptyCart() {\n        setCartItems([])\n    }\n    \n    return (\n        <Context.Provider value={{\n            allPhotos, \n            toggleFavorite, \n            cartItems, \n            addToCart, \n            removeFromCart, \n            emptyCart\n        }}>\n            {children}\n        </Context.Provider>\n    )\n}\n\nexport {ContextProvider, Context}","import React, {useContext} from \"react\"\nimport {Link} from \"react-router-dom\"\n\nimport {Context} from \"../Context\"\n\nfunction Header() {\n    const {cartItems} = useContext(Context)\n    const cartClassName = cartItems.length > 0 ? \"ri-shopping-cart-fill\" : \"ri-shopping-cart-line\"\n    return (\n        <header>\n            <Link to=\"/\"><h2>Pic Some</h2></Link>\n            <Link to=\"/cart\">\n                <i className={`${cartClassName} ri-fw ri-2x`}></i>\n            </Link>\n        </header>\n    )\n}\n\nexport default Header\n","import {useState, useEffect, useRef} from \"react\"\n\nfunction useHover() {\n    const [hovered, setHovered] = useState(false)\n    const ref = useRef(null)\n    \n    function enter() {\n        setHovered(true)\n    }\n    \n    function leave() {\n        setHovered(false)\n    }\n    \n    useEffect(() => {\n        ref.current.addEventListener(\"mouseenter\", enter)\n        ref.current.addEventListener(\"mouseleave\", leave)\n        \n        return () => {    \n            ref.current.removeEventListener(\"mouseenter\", enter)\n            ref.current.removeEventListener(\"mouseleave\", leave)\n        }\n    }, [])\n    \n    return [hovered, ref]\n}\n\nexport default useHover","import React, {useContext} from \"react\"\nimport PropTypes from \"prop-types\"\nimport {Context} from \"../Context\"\nimport useHover from \"../hooks/useHover\"\n\nfunction CartItem({item}) {\n    // const [hovered, setHovered] = useState(false)\n    const [hovered, ref] = useHover()\n    const {removeFromCart} = useContext(Context)\n    \n    const iconClassName = hovered ? \"ri-delete-bin-fill\" : \"ri-delete-bin-line\"\n    \n    return (\n        <div className=\"cart-item\">\n            <i \n                className={iconClassName} \n                onClick={() => removeFromCart(item.id)}\n                ref={ref}\n            >\n            </i>\n            \n            <img src={item.url} width=\"130px\" />\n            <p>$5.99</p>\n        </div>\n    )\n}\n\nCartItem.propTypes = {\n    item: PropTypes.shape({\n        url: PropTypes.string.isRequired\n    })\n}\n\nexport default CartItem","import React, {useState, useContext} from \"react\"\nimport {Context} from \"../Context\"\nimport CartItem from \"../components/CartItem\"\n\nfunction Cart() {\n    const [buttonText, setButtonText] = useState(\"Place Order\")\n    const {cartItems, emptyCart} = useContext(Context)\n    const totalCost = 5.99 * cartItems.length\n    const totalCostDisplay = totalCost.toLocaleString(\"en-US\", {style: \"currency\", currency: \"USD\"})\n    \n    const cartItemElements = cartItems.map(item => (\n        <CartItem key={item.id} item={item} />\n    ))\n    \n    function placeOrder() {\n        setButtonText(\"Ordering...\")\n        setTimeout(() => {\n            console.log(\"Order placed!\")\n            setButtonText(\"Place Order\")\n            emptyCart()\n        }, 3000)\n    }\n    \n    return (\n        <main className=\"cart-page\">\n            <h1>Check out</h1>\n            {cartItemElements}\n            <p className=\"total-cost\">Total: {totalCostDisplay}</p>\n            {\n                cartItems.length > 0 ?\n                <div className=\"order-button\">\n                    <button onClick={placeOrder}>{buttonText}</button>\n                </div> :\n                <p>You have no items in your cart.</p>\n            }\n        </main>\n    )\n}\n\nexport default Cart","import React, {useContext} from \"react\"\nimport PropTypes from \"prop-types\"\nimport useHover from \"../hooks/useHover\"\nimport {Context} from \"../Context\"\n\nfunction Image({className, img}) {\n    // const [hovered, setHovered] = useState(false)\n    const [hovered, ref] = useHover()\n    const {toggleFavorite, addToCart, cartItems, removeFromCart} = useContext(Context)\n    \n    function heartIcon() {\n        if(img.isFavorite) {\n            return <i className=\"ri-heart-fill favorite\" onClick={() => toggleFavorite(img.id)}></i>\n        } else if(hovered) {\n            return <i className=\"ri-heart-line favorite\" onClick={() => toggleFavorite(img.id)}></i>\n        }\n    }\n    \n    function cartIcon() {\n        const alreadyInCart = cartItems.some(item => item.id === img.id)\n        if(alreadyInCart) {\n            return <i className=\"ri-shopping-cart-fill cart\" onClick={() => removeFromCart(img.id)}></i>\n        } else if(hovered) {\n            return <i className=\"ri-add-circle-line cart\" onClick={() => addToCart(img)}></i>\n        }\n    }\n\n    return (\n        <div \n            className={`${className} image-container`}\n            ref={ref}\n        >\n            <img src={img.url} className=\"image-grid\"/>\n            {heartIcon()}\n            {cartIcon()}\n        </div>\n    )\n}\n\nImage.propTypes = {\n    className: PropTypes.string,\n    img: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        url: PropTypes.string.isRequired,\n        isFavorite: PropTypes.bool\n    })\n}\n\nexport default Image\n","export function getClass(i) {\n    if (i % 5 === 0) {\n        return 'big';\n    }\n    else if (i % 6 === 0) {\n        return 'wide'\n    }\n}","import React, {useContext} from \"react\"\n\nimport Image from \"../components/Image\"\nimport {Context} from \"../Context\"\nimport {getClass} from \"../utils\"\n\nfunction Photos() {\n    const {allPhotos} = useContext(Context)\n    \n    const imageElements = allPhotos.map((img, i) => (\n        <Image key={img.id} img={img} className={getClass(i)} />\n    ))\n    \n    return (\n        <main className=\"photos\">\n            {imageElements}\n        </main>\n    )\n}\n\nexport default Photos","import React from \"react\"\nimport {Switch, Route} from \"react-router-dom\"\n\nimport Header from \"./components/Header\"\nimport Cart from \"./pages/Cart\"\nimport Photos from \"./pages/Photos\"\n\nfunction App() {    \n    return (\n        <div>\n            <Header />\n            <Switch>\n                <Route exact path=\"/\">\n                    <Photos />\n                </Route>\n                \n                <Route path=\"/cart\">\n                    <Cart />\n                </Route>\n            </Switch>\n        </div>\n    )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter as Router} from \"react-router-dom\"\nimport {ContextProvider} from \"./Context\"\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <ContextProvider>\n      <Router>\n          <App />\n      </Router>\n  </ContextProvider>, \n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n"],"sourceRoot":""}